/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

boundary
{
    topair_top
    {
        type            symmetryPlane;
    }
}

U
{
    internalField   uniform (0.1 0 0);

    boundaryField
    {
        inlet-topair
        {
            type            fixedValue;
            value           uniform ( 0.1 0 0 );
        }

        outlet-topair
        {
            type            inletOutlet;
            inletValue      uniform ( 0 0 0 );
            value           uniform ( 0.1 0 0 );
        }

        topair_top
        {
            type            symmetryPlane;
        }
        
        "topair_to_.*"
        {
            type            fixedValue;
            value           uniform (0 0 0);
        }
		
		frontandback-topair
        {
            type            empty;
        }
    }
}

T
{
    internalField   uniform 300;

    boundaryField
    {
        inlet-topair
        {
            type            fixedValue;
            value           uniform 300;
        }

        outlet-topair
        {
            type            zeroGradient;
        }

        topair_top
        {
            type            symmetryPlane;
        }

        "topair_to_.*"
        {
            type            compressible::turbulentTemperatureCoupledBaffleMixed;
            Tnbr            T;
            kappaMethod     fluidThermo;
            kappaName       none;
            value           uniform 300;
        }
		
		frontandback-topair
        {
            type            empty;
        }
    }
}

epsilon
{
    internalField   uniform 0.01;

    boundaryField
    {
        inlet-topair
        {
            type            inletOutlet;
            inletValue      uniform 0.01;
            value           uniform 0.01;
        }

        outlet-topair
        {
            type            fixedValue;
            value           uniform 0.01;
        }

        topair_top
        {
            type            symmetryPlane;
        }

        "topair_to_.*"
        {
            type            compressible::epsilonWallFunction;
            value           uniform 0.01;
        }
		
		frontandback-topair
        {
            type            empty;
        }
    }
}

k
{
    internalField   uniform 0.1;

    boundaryField
    {
        inlet-topair
        {
            type            inletOutlet;
            inletValue      uniform 0.1;
            value           uniform 0.1;
        }

        outlet-topair
        {
            type            fixedValue;
            value           uniform 0.1;
        }

        topair_top
        {
            type            symmetryPlane;
        }

        "topair_to_.*"
        {
            type            compressible::kqRWallFunction;
            value           uniform 0.1;
        }
		
		frontandback-topair
        {
            type            empty;
        }
    }
}

p_rgh
{
    internalField   uniform 1e5;

    boundaryField
    {
        ".*"
        {
            type            fixedFluxPressure;
            value           uniform 1e5;
        }

        topair_top
        {
            type            symmetryPlane;
        }

        outlet-topair
        {
            type            fixedMean;
            meanValue       uniform 1e5;
            value           uniform 1e5;
        }

        frontandback-topair
        {
            type            empty;
        }

    }
}

p
{
    internalField   uniform 1e5;

    boundaryField
    {
        ".*"
        {
            type            calculated;
            value           uniform 1e5;
        }

        topair_top
        {
            type            symmetryPlane;
        }

        inlet-topair
        {
            type            calculated;
            value           uniform 1e5;
        }

        frontandback-topair
        {
            type            empty;
        }
    }
}

// ************************************************************************* //
